# Configuration for telegraf agent
[agent]
  interval = "10s"
  round_interval = true

  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""

  hostname = "iot-telegraf"
  omit_hostname = false


[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  token = "p_ShNyw1R2mKmcJ3XF0AMzbxSVP4RpRekeeV_OUvZyoXthswPwgqEJ8C8bOd7VkpcLAX3s5zPIHi90rZaQaoVg=="
  organization = "IoT"
  bucket = "sensorsData"


# Air Nodes Parser =============================================================
[[inputs.mqtt_consumer]]
  servers = ["tcp://emqx:1883"]

  ## Topics that will be subscribed to.
  topics = ["iot/air"]
  client_id = "Telegraf-Client-Air"

  ## Username and password to connect MQTT server.
  username = "mqttUser"
  password = "mqttUser"

  data_format = "json_v2"

  [[inputs.mqtt_consumer.json_v2]]

    # Telegraf config parser using json v2 for the json data bellow
    #     "node_type": "air", 
    #     "node_name": "North Hall",
    #     "data": {
    #         "temp": 12.54,
    #         "humidity": 77,
    #         "CO": 1.2,
    #         "Movement": True
    #     },
    # where node_type and node_name are tags and data is a field

    [[inputs.mqtt_consumer.json_v2.tag]]
      path = "node_type"
      type = "string"
    
    [[inputs.mqtt_consumer.json_v2.tag]]
      path = "node_name"
      type = "string"

    [[inputs.mqtt_consumer.json_v2.field]]
      path = "data.temp"
      type = "float"

    [[inputs.mqtt_consumer.json_v2.field]]
      path = "data.humidity"
      type = "int"
    
    [[inputs.mqtt_consumer.json_v2.field]]
      path = "data.CO"
      type = "float"
    
    [[inputs.mqtt_consumer.json_v2.field]]
      path = "data.movement"
      type = "int"

# Aquatic Nodes Parser =============================================================
[[inputs.mqtt_consumer]]
  servers = ["tcp://emqx:1883"]

  ## Topics that will be subscribed to.
  topics = ["iot/water"]

  client_id = "Telegraf-Client-Water"

  ## Username and password to connect MQTT server.
  username = "mqttUser"
  password = "mqttUser"

  data_format = "json_v2"

  [[inputs.mqtt_consumer.json_v2]]
    # Telegraf config parser using json v2 for the json data bellow
    # {
    #     "node_type": "aquatic", 
    #     "node_name": "Pacific Tank",
    #     "data": {
    #         "temp": 12.54,
    #         "ph": 77
    #     },
    # }
    # where node_type and node_name are tags and data is a field

    [[inputs.mqtt_consumer.json_v2.tag]]
      path = "node_type"
      type = "string"

    [[inputs.mqtt_consumer.json_v2.tag]]
      path = "node_name"
      type = "string"

    [[inputs.mqtt_consumer.json_v2.field]]
      path = "data.temp"
      type = "float"

    [[inputs.mqtt_consumer.json_v2.field]]
      path = "data.ph"
      type = "float"

# Aquatic Nodes Parser =============================================================
[[inputs.mqtt_consumer]]
  servers = ["tcp://emqx:1883"]

  ## Topics that will be subscribed to.
  topics = ["iot/status"]

  client_id = "Telegraf-Client-Status"

  ## Username and password to connect MQTT server.
  username = "mqttUser"
  password = "mqttUser"

  data_format = "json_v2"

  [[inputs.mqtt_consumer.json_v2]]
    # Telegraf config parser using json v2 for the json data bellow
    # {
    #     "node_type": "aquatic", 
    #     "node_name": "Pacific Tank",
    #     "data": {
    #         "temp": 12.54,
    #         "batt": 3220
    #     },
    # }

    [[inputs.mqtt_consumer.json_v2.tag]]
      path = "node_type"
      type = "string"

    [[inputs.mqtt_consumer.json_v2.tag]]
      path = "node_name"
      type = "string"

    [[inputs.mqtt_consumer.json_v2.field]]
      path = "data.temp"
      type = "float"

    [[inputs.mqtt_consumer.json_v2.field]]
      path = "data.batt"
      type = "int"